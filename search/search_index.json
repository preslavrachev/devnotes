{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to DevNotes DevNotes is a constantly updated selection of notes and development recipes I have collected over time. I started writing things down, mainly for my personal reference, but with time, I became convinced that other people would benefit from those as well. Some of the things here have originated on my blog , or have been reposted there. Feel free to check it out as well. Who am I? My name is Preslav Rachev and I am a genuinely curious individual. I am the epitome of the fullstack software developer, having built systems and applications with a variety of tools and technologies, for about a decade. I work primarily as a JVM/Python double agent, tying distributed data-driven applications together.","title":"Welcome to DevNotes"},{"location":"#welcome-to-devnotes","text":"DevNotes is a constantly updated selection of notes and development recipes I have collected over time. I started writing things down, mainly for my personal reference, but with time, I became convinced that other people would benefit from those as well. Some of the things here have originated on my blog , or have been reposted there. Feel free to check it out as well.","title":"Welcome to DevNotes"},{"location":"#who-am-i","text":"My name is Preslav Rachev and I am a genuinely curious individual. I am the epitome of the fullstack software developer, having built systems and applications with a variety of tools and technologies, for about a decade. I work primarily as a JVM/Python double agent, tying distributed data-driven applications together.","title":"Who am I?"},{"location":"Other Tech Topics/blockchains/","text":"Blockchains Hard vs. Soft Forks Consensus rule changes broadly fall into two categories: hard forks and soft forks . By definition, hard forks loosen or eliminate existing rules whereas soft forks only tighten or add new rules. 1 A hard fork does away with presently existing validation checks, which automatically calls for the creation of a separate chain, independent of the original one. Soft forks , on the other hand, add new rules and validation checks, but make sure that new blocks will be backwards-compatible and accepted by clients, which haven't upgraded. In general, soft forks do not result in chains splitting from one another. Do keep in mind, however, that at a certain point of time, clients having the soft fork update might stop accepting pre-soft-fork blocks, essentially forcing old clients to upgrade. Forks, Signaling, and Activation \u21a9","title":"Blockchains"},{"location":"Other Tech Topics/blockchains/#blockchains","text":"","title":"Blockchains"},{"location":"Other Tech Topics/blockchains/#hard-vs-soft-forks","text":"Consensus rule changes broadly fall into two categories: hard forks and soft forks . By definition, hard forks loosen or eliminate existing rules whereas soft forks only tighten or add new rules. 1 A hard fork does away with presently existing validation checks, which automatically calls for the creation of a separate chain, independent of the original one. Soft forks , on the other hand, add new rules and validation checks, but make sure that new blocks will be backwards-compatible and accepted by clients, which haven't upgraded. In general, soft forks do not result in chains splitting from one another. Do keep in mind, however, that at a certain point of time, clients having the soft fork update might stop accepting pre-soft-fork blocks, essentially forcing old clients to upgrade. Forks, Signaling, and Activation \u21a9","title":"Hard vs. Soft Forks"},{"location":"devops/jenkins/","text":"Jenkins Pipelines Declarative vs. Scripting Pipeline Syntax 1 Declarative Pipeline Skeleton pipeline { agent any stages { stage ( 'Build' ) { steps { // } } stage ( 'Test' ) { steps { // } } stage ( 'Deploy' ) { steps { // } } } } Scripting Pipeline Skeleton node { stage ( 'Build' ) { // } stage ( 'Test' ) { // } stage ( 'Deploy' ) { // } } Declarative versus Scripted Pipeline syntax | Jenkins Docs \u21a9","title":"Jenkins"},{"location":"devops/jenkins/#jenkins","text":"","title":"Jenkins"},{"location":"devops/jenkins/#pipelines","text":"","title":"Pipelines"},{"location":"devops/jenkins/#declarative-vs-scripting-pipeline-syntax1","text":"","title":"Declarative vs. Scripting Pipeline Syntax1"},{"location":"devops/jenkins/#declarative-pipeline-skeleton","text":"pipeline { agent any stages { stage ( 'Build' ) { steps { // } } stage ( 'Test' ) { steps { // } } stage ( 'Deploy' ) { steps { // } } } }","title":"Declarative Pipeline Skeleton"},{"location":"devops/jenkins/#scripting-pipeline-skeleton","text":"node { stage ( 'Build' ) { // } stage ( 'Test' ) { // } stage ( 'Deploy' ) { // } } Declarative versus Scripted Pipeline syntax | Jenkins Docs \u21a9","title":"Scripting Pipeline Skeleton"},{"location":"devops/kubernetes/","text":"Kubernetes Kubectl Troubleshooting Manually replacing a pod Replacing a pod without a deployment manifest There might be situations, in which you might not have the needed deployment.yaml manifest file. In this case, you can still replace the pod by asking kubectl to return the YAML deployment manufest that the pod has last been deployed with: 1 kubectl get pod PODNAME -n NAMESPACE -o yaml | kubectl replace --force -f - check, this can be added as an alias to the kubectl command How to retry image pull in a kubernetes Pods? | StackOverflow \u21a9","title":"Kubernetes"},{"location":"devops/kubernetes/#kubernetes","text":"","title":"Kubernetes"},{"location":"devops/kubernetes/#kubectl","text":"","title":"Kubectl"},{"location":"devops/kubernetes/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"devops/kubernetes/#manually-replacing-a-pod","text":"","title":"Manually replacing a pod"},{"location":"devops/kubernetes/#replacing-a-pod-without-a-deployment-manifest","text":"There might be situations, in which you might not have the needed deployment.yaml manifest file. In this case, you can still replace the pod by asking kubectl to return the YAML deployment manufest that the pod has last been deployed with: 1 kubectl get pod PODNAME -n NAMESPACE -o yaml | kubectl replace --force -f - check, this can be added as an alias to the kubectl command How to retry image pull in a kubernetes Pods? | StackOverflow \u21a9","title":"Replacing a pod without a deployment manifest"},{"location":"devops/docker/python/","text":"Containerizing Python Applications with Docker Ignore Python-specific artifacts Often, when you build a Docker image, you will end up copying Python code directly of the local machine into a Docker image. If you have previously executed your program, you might end up copying your __pycache__ folders containing compiled .pyc files. PyTest is notorious for screaming at you, if you copy your code somewhere else and forget to clear the cache: import file mismatch: ... HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules This is where a .dockerignore file comes handy. Similar to a .gitignore file, it will exclude directory/file patterns you put there from being copied onto the final Dcoker image. Here is a simple .dockerignore file you can add to the root of your Python project: 1 .git/ **/*.pyc **/__pycache__ Sample .dockerignore file for Python projects \u21a9","title":"Python"},{"location":"devops/docker/python/#containerizing-python-applications-with-docker","text":"","title":"Containerizing Python Applications with Docker"},{"location":"devops/docker/python/#ignore-python-specific-artifacts","text":"Often, when you build a Docker image, you will end up copying Python code directly of the local machine into a Docker image. If you have previously executed your program, you might end up copying your __pycache__ folders containing compiled .pyc files. PyTest is notorious for screaming at you, if you copy your code somewhere else and forget to clear the cache: import file mismatch: ... HINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules This is where a .dockerignore file comes handy. Similar to a .gitignore file, it will exclude directory/file patterns you put there from being copied onto the final Dcoker image. Here is a simple .dockerignore file you can add to the root of your Python project: 1 .git/ **/*.pyc **/__pycache__ Sample .dockerignore file for Python projects \u21a9","title":"Ignore Python-specific artifacts"},{"location":"programming/CSS/tailwind/","text":"","title":"Tailwind"},{"location":"programming/DevOps/Travis/","text":"Travis CI Server Environment Variables Travis comes with a few preset environment libraries 1 that can be access from within the build file: TRAVIS_REPO_SLUG - The slug (in form: owner_name/repo_name) of the repository currently being built. Travis CLI Changing the repository URL once you have configured it Often, you might change the address of the remote URL (e.g, when changing the name of the repo on GitHub). This will probably reuslt in Travis CLI throwing the followign message at you: fatal : Authentication failed for [ my - repo - url ] This is because Travis CLI caches the information locally as part of the .git/config file. Resolving the upper issue is just a matter of fixing the URL in the config file 2 . https://docs.travis-ci.com/user/environment-variables/#convenience-variables \u21a9 https://github.com/travis-ci/travis-ci/issues/2334#issuecomment-72932432 \u21a9","title":"Travis"},{"location":"programming/DevOps/Travis/#travis-ci-server","text":"","title":"Travis CI Server"},{"location":"programming/DevOps/Travis/#environment-variables","text":"Travis comes with a few preset environment libraries 1 that can be access from within the build file: TRAVIS_REPO_SLUG - The slug (in form: owner_name/repo_name) of the repository currently being built.","title":"Environment Variables"},{"location":"programming/DevOps/Travis/#travis-cli","text":"","title":"Travis CLI"},{"location":"programming/DevOps/Travis/#changing-the-repository-url-once-you-have-configured-it","text":"Often, you might change the address of the remote URL (e.g, when changing the name of the repo on GitHub). This will probably reuslt in Travis CLI throwing the followign message at you: fatal : Authentication failed for [ my - repo - url ] This is because Travis CLI caches the information locally as part of the .git/config file. Resolving the upper issue is just a matter of fixing the URL in the config file 2 . https://docs.travis-ci.com/user/environment-variables/#convenience-variables \u21a9 https://github.com/travis-ci/travis-ci/issues/2334#issuecomment-72932432 \u21a9","title":"Changing the repository URL once you have configured it"},{"location":"programming/Go/","text":"Introduction Basics Pass-by-reference In Go, there is no implicit pass-by-reference . Everything is a value , unless using a pointer 1 2 . package main import \"fmt\" type Person struct { Name string } func passByVal ( person Person ) Person { // changing the name won't have an effect on the original variable person . Name = \"John Smith\" return person } func passByRef ( person * Person ) * Person { // changing the name will have an effect on the original variable person . Name = \"John Smith\" return person } func main () { me := Person { Name : \"Preslav Rachev\" } fmt . Println ( me ) fmt . Println ( passByVal ( me )) fmt . Println ( me ) fmt . Println ( * passByRef ( & me )) fmt . Println ( me ) } will result in the following output: { Preslav Rachev } { John Smith } { Preslav Rachev } { John Smith } { John Smith } Generics Go does not have generics, the way other languages do. Frankly, because of the complexity they introduce. This is not to say that you cannot acieve some sort of type of formal restrictions, but mainly, using Go's native constructs 3 . Readers and Writers Writers type Writer interface { Write ( p [] byte ) ( n int , err error ) } Passing a string to a writer Often, you will need to conver a string to a slice of bytes, in order to pass it to a Writer . The easiest way to do this in Go, is using simple type conversion. The code in the following example will write the string \"Hello World!\" to an HTTP ResponseWriter instance, which is technically a Writer , since it implements the Write method. http . HandleFunc ( \"/hello\" , func ( w http . ResponseWriter , r * http . Request ) { w . Write ([] byte ( \"Hello World!\" )) }) Databases SQLite Drivers https://github.com/mattn/go-sqlite3 supports database/sql, based on cgo. https://github.com/feyeleanor/gosqlite3 doesn't support database/sql, based on cgo. https://github.com/phf/go-sqlite3 Building Web application with Golang Backend Development Building a RESTful API in Go Using Only the Standard Library When are function parameters passed by value? | The Go Programming Language FAQ \u21a9 There is no pass-by-reference in Go | Dave Cheney \u21a9 Who needs generics? Use ... instead! \u21a9","title":"Introduction"},{"location":"programming/Go/#introduction","text":"","title":"Introduction"},{"location":"programming/Go/#basics","text":"","title":"Basics"},{"location":"programming/Go/#pass-by-reference","text":"In Go, there is no implicit pass-by-reference . Everything is a value , unless using a pointer 1 2 . package main import \"fmt\" type Person struct { Name string } func passByVal ( person Person ) Person { // changing the name won't have an effect on the original variable person . Name = \"John Smith\" return person } func passByRef ( person * Person ) * Person { // changing the name will have an effect on the original variable person . Name = \"John Smith\" return person } func main () { me := Person { Name : \"Preslav Rachev\" } fmt . Println ( me ) fmt . Println ( passByVal ( me )) fmt . Println ( me ) fmt . Println ( * passByRef ( & me )) fmt . Println ( me ) } will result in the following output: { Preslav Rachev } { John Smith } { Preslav Rachev } { John Smith } { John Smith }","title":"Pass-by-reference"},{"location":"programming/Go/#generics","text":"Go does not have generics, the way other languages do. Frankly, because of the complexity they introduce. This is not to say that you cannot acieve some sort of type of formal restrictions, but mainly, using Go's native constructs 3 .","title":"Generics"},{"location":"programming/Go/#readers-and-writers","text":"","title":"Readers and Writers"},{"location":"programming/Go/#writers","text":"type Writer interface { Write ( p [] byte ) ( n int , err error ) }","title":"Writers"},{"location":"programming/Go/#passing-a-string-to-a-writer","text":"Often, you will need to conver a string to a slice of bytes, in order to pass it to a Writer . The easiest way to do this in Go, is using simple type conversion. The code in the following example will write the string \"Hello World!\" to an HTTP ResponseWriter instance, which is technically a Writer , since it implements the Write method. http . HandleFunc ( \"/hello\" , func ( w http . ResponseWriter , r * http . Request ) { w . Write ([] byte ( \"Hello World!\" )) })","title":"Passing a string to a writer"},{"location":"programming/Go/#databases","text":"","title":"Databases"},{"location":"programming/Go/#sqlite","text":"","title":"SQLite"},{"location":"programming/Go/#drivers","text":"https://github.com/mattn/go-sqlite3 supports database/sql, based on cgo. https://github.com/feyeleanor/gosqlite3 doesn't support database/sql, based on cgo. https://github.com/phf/go-sqlite3 Building Web application with Golang","title":"Drivers"},{"location":"programming/Go/#backend-development","text":"Building a RESTful API in Go Using Only the Standard Library When are function parameters passed by value? | The Go Programming Language FAQ \u21a9 There is no pass-by-reference in Go | Dave Cheney \u21a9 Who needs generics? Use ... instead! \u21a9","title":"Backend Development"},{"location":"programming/Go/json/","text":"JSON Manipulation Frequently Asked Questions When should I use json.Decode and when json.Unmarshall ? Decode uses Unmarshall under the hood, but takes the concrete decoder into consideration. Here is a simple rule of thumb: Use json.NewDecoder(...).Decode() if your data is coming from an io.Reader stream, or you need to decode multiple values from a stream of data. Use json.Unmarshal if you already have the JSON data in memory. Usually, you would try to convert the response of an HTTP request to a JSON object, in which case Decode is the better choice: json . NewDecoder ( res . Body ). Decode ( & myResponseStruct {}) 3rd Party Libraries GJSON GJSON provides a fast and simple way to get values from a json document. It has features such as one line retrieval, dot notation paths, iteration, and parsing json lines. A basic example from the GJSON README: package main import \"github.com/tidwall/gjson\" const json = `{\"name\":{\"first\":\"Janet\",\"last\":\"Prichard\"},\"age\":47}` func main () { value := gjson . Get ( json , \"name.last\" ) println ( value . String ()) }","title":"JSON Manipulation"},{"location":"programming/Go/json/#json-manipulation","text":"","title":"JSON Manipulation"},{"location":"programming/Go/json/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"programming/Go/json/#when-should-i-use-jsondecode-and-when-jsonunmarshall","text":"Decode uses Unmarshall under the hood, but takes the concrete decoder into consideration. Here is a simple rule of thumb: Use json.NewDecoder(...).Decode() if your data is coming from an io.Reader stream, or you need to decode multiple values from a stream of data. Use json.Unmarshal if you already have the JSON data in memory. Usually, you would try to convert the response of an HTTP request to a JSON object, in which case Decode is the better choice: json . NewDecoder ( res . Body ). Decode ( & myResponseStruct {})","title":"When should I use json.Decode and when json.Unmarshall?"},{"location":"programming/Go/json/#3rd-party-libraries","text":"","title":"3rd Party Libraries"},{"location":"programming/Go/json/#gjson","text":"GJSON provides a fast and simple way to get values from a json document. It has features such as one line retrieval, dot notation paths, iteration, and parsing json lines. A basic example from the GJSON README: package main import \"github.com/tidwall/gjson\" const json = `{\"name\":{\"first\":\"Janet\",\"last\":\"Prichard\"},\"age\":47}` func main () { value := gjson . Get ( json , \"name.last\" ) println ( value . String ()) }","title":"GJSON"},{"location":"programming/Go/resources/","text":"Go Resources Blogs Applied Go Dave Cheney Go in 5 Minutes Bookmarks Bypassing Golang's lack of constructors Golang doesn't provide constructors but instead advocates for a package-level factory method with the New convention. If only this were then the singular way of initialising an object; unfortunately this is not always necessarily the case... Dependency Injection in Go \u00b7 software is fun Written by Date Added : 2019-05-02T05:22:52Z uber-go/dig: A reflection based dependency injection toolkit for Go. A reflection based dependency injection toolkit for Go. - uber-go/dig Date Added : 2019-05-01T06:19:51Z google/wire: Compile-time Dependency Injection for Go Compile-time Dependency Injection for Go. Contribute to google/wire development by creating an account on GitHub. Date Added : 2019-05-01T06:14:33Z Go modules support in Visual Studio Code An extension for VS Code which provides support for the Go language. - Microsoft/vscode-go Date Added : 2019-04-30T10:13:59Z Style guideline for Go packages \u00b7 Go, the unwritten parts Sat, Jan 14, 2017 Date Added : 2019-04-29T13:53:05Z Go Web Examples Go Web Examples provides easy to understand code snippets on how to do web development in the Go programming language. Date Added : 2019-04-12T09:57:40Z The Go Blog Getting to Go: The Journey of Go's Garbage Collector Date Added : 2019-04-09T04:17:13Z Lessons learned porting 50k loc from Java to Go Things I've learned porting a 50 thousand lines of code from Java to Go Date Added : 2019-04-07T15:34:56Z A no-nonsense guide to environment variables in Go A step-by-step guide on how to configure your Go application with environment variables Date Added : 2019-04-04T12:36:01Z Creating shared libraries in Go GoThe Go compiler has been able to produce shared libraries since version 1.5.So how does it work ? First let\u2019s write a Go function we want to share. The Gos... Date Added : 2019-04-04T05:19:52Z Why I Don\u2019t Use Go Web Frameworks For those who are tempted to use a web framework in Golang, it may not be worth it. Date Added : 2019-03-12T09:52:09Z 50 Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs Go is a simple and fun language, but, like any other language, it has a few gotchas... Many of those gotchas are not entirely Go's fault. Some of these mistakes are natural traps if you are coming from another language.... Date Added : 2019-03-11T18:03:58Z joho/godotenv: A Go port of Ruby's dotenv library (Loads environment variables from .env .) A Go port of Ruby's dotenv library (Loads environment variables from .env .) - joho/godotenv Date Added : 2019-03-05T05:54:12Z JSON-to-Go: Convert JSON to Go instantly This tool instantly converts JSON into a Go type definition. Paste a JSON structure on the left and the equivalent Go type will be generated to the right, which you can paste into your program. The script has to make some assumptions, so double-check the output! Date Added : 2019-03-04T20:55:49Z Go's http package by example We are a group of developers involved in the tech industry that work, laugh, discover, and grow together. We encourage each other to push the boundaries of the technology we work with everyday. To help reach our personal goals we collaborate often and want others to share in this experience. Date Added : 2019-03-04T17:52:38Z lorca/README.md at master \u00b7 zserge/lorca \u00b7 GitHub Build cross-platform modern desktop apps in Go + HTML5 - zserge/lorca Date Added : 2019-03-03T15:42:43Z Carlmjohnson.net: On Using Go Channels Like Python Generators I really like Go, and I really like Python, so it\u2019s natural that I apply patterns I\u2019ve learned in Python to Go\u2026 even when it\u2019s maybe not appropriate.For example, in Python, it\u2019s common to use generators to process a stream of data. Take this simple (unrealistic, inefficient) odd number generator:>>> def odds(from_, to): Date Added : 2019-02-25T05:51:39Z GitHub - tidwall/gjson: Get JSON values quickly - JSON Parser for Go Get JSON values quickly - JSON Parser for Go. Contribute to tidwall/gjson development by creating an account on GitHub. Date Added : 2019-02-24T17:51:45Z GitHub - qor/admin: Qor Admin - Instantly create a beautiful, cross platform, configurable Admin Interface and API for managing your data in minutes. Qor Admin - Instantly create a beautiful, cross platform, configurable Admin Interface and API for managing your data in minutes. - qor/admin Date Added : 2019-02-20T16:30:21Z Gopherize.me - A Gopher pic that's as unique as you Generate a Gopher pic that's as unique as you Date Added : 2019-02-20T16:28:52Z","title":"Resources"},{"location":"programming/Go/resources/#go-resources","text":"","title":"Go Resources"},{"location":"programming/Go/resources/#blogs","text":"Applied Go Dave Cheney Go in 5 Minutes","title":"Blogs"},{"location":"programming/Go/resources/#bookmarks","text":"","title":"Bookmarks"},{"location":"programming/Go/resources/#bypassing-golangs-lack-of-constructors","text":"Golang doesn't provide constructors but instead advocates for a package-level factory method with the New convention. If only this were then the singular way of initialising an object; unfortunately this is not always necessarily the case... Dependency Injection in Go \u00b7 software is fun Written by Date Added : 2019-05-02T05:22:52Z uber-go/dig: A reflection based dependency injection toolkit for Go. A reflection based dependency injection toolkit for Go. - uber-go/dig Date Added : 2019-05-01T06:19:51Z google/wire: Compile-time Dependency Injection for Go Compile-time Dependency Injection for Go. Contribute to google/wire development by creating an account on GitHub. Date Added : 2019-05-01T06:14:33Z Go modules support in Visual Studio Code An extension for VS Code which provides support for the Go language. - Microsoft/vscode-go Date Added : 2019-04-30T10:13:59Z Style guideline for Go packages \u00b7 Go, the unwritten parts Sat, Jan 14, 2017 Date Added : 2019-04-29T13:53:05Z Go Web Examples Go Web Examples provides easy to understand code snippets on how to do web development in the Go programming language. Date Added : 2019-04-12T09:57:40Z The Go Blog Getting to Go: The Journey of Go's Garbage Collector Date Added : 2019-04-09T04:17:13Z Lessons learned porting 50k loc from Java to Go Things I've learned porting a 50 thousand lines of code from Java to Go Date Added : 2019-04-07T15:34:56Z A no-nonsense guide to environment variables in Go A step-by-step guide on how to configure your Go application with environment variables Date Added : 2019-04-04T12:36:01Z Creating shared libraries in Go GoThe Go compiler has been able to produce shared libraries since version 1.5.So how does it work ? First let\u2019s write a Go function we want to share. The Gos... Date Added : 2019-04-04T05:19:52Z Why I Don\u2019t Use Go Web Frameworks For those who are tempted to use a web framework in Golang, it may not be worth it. Date Added : 2019-03-12T09:52:09Z 50 Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs Go is a simple and fun language, but, like any other language, it has a few gotchas... Many of those gotchas are not entirely Go's fault. Some of these mistakes are natural traps if you are coming from another language.... Date Added : 2019-03-11T18:03:58Z joho/godotenv: A Go port of Ruby's dotenv library (Loads environment variables from .env .) A Go port of Ruby's dotenv library (Loads environment variables from .env .) - joho/godotenv Date Added : 2019-03-05T05:54:12Z JSON-to-Go: Convert JSON to Go instantly This tool instantly converts JSON into a Go type definition. Paste a JSON structure on the left and the equivalent Go type will be generated to the right, which you can paste into your program. The script has to make some assumptions, so double-check the output! Date Added : 2019-03-04T20:55:49Z Go's http package by example We are a group of developers involved in the tech industry that work, laugh, discover, and grow together. We encourage each other to push the boundaries of the technology we work with everyday. To help reach our personal goals we collaborate often and want others to share in this experience. Date Added : 2019-03-04T17:52:38Z lorca/README.md at master \u00b7 zserge/lorca \u00b7 GitHub Build cross-platform modern desktop apps in Go + HTML5 - zserge/lorca Date Added : 2019-03-03T15:42:43Z Carlmjohnson.net: On Using Go Channels Like Python Generators I really like Go, and I really like Python, so it\u2019s natural that I apply patterns I\u2019ve learned in Python to Go\u2026 even when it\u2019s maybe not appropriate.For example, in Python, it\u2019s common to use generators to process a stream of data. Take this simple (unrealistic, inefficient) odd number generator:>>> def odds(from_, to): Date Added : 2019-02-25T05:51:39Z GitHub - tidwall/gjson: Get JSON values quickly - JSON Parser for Go Get JSON values quickly - JSON Parser for Go. Contribute to tidwall/gjson development by creating an account on GitHub. Date Added : 2019-02-24T17:51:45Z GitHub - qor/admin: Qor Admin - Instantly create a beautiful, cross platform, configurable Admin Interface and API for managing your data in minutes. Qor Admin - Instantly create a beautiful, cross platform, configurable Admin Interface and API for managing your data in minutes. - qor/admin Date Added : 2019-02-20T16:30:21Z Gopherize.me - A Gopher pic that's as unique as you Generate a Gopher pic that's as unique as you Date Added : 2019-02-20T16:28:52Z","title":"Bypassing Golang's lack of constructors"},{"location":"programming/Go/tooling/","text":"Go Developer Tooling gopls gopls (pronounced: \"go please\") is an implementation of the Language Server Protocol (LSP) server for Go. The LSP allows any text editor to be extended with IDE-like features (see https://langserver.org/ for details). It is currently in alpha, so it is not stable. 1 gopls \u21a9","title":"Developer Tooling"},{"location":"programming/Go/tooling/#go-developer-tooling","text":"","title":"Go Developer Tooling"},{"location":"programming/Go/tooling/#gopls","text":"gopls (pronounced: \"go please\") is an implementation of the Language Server Protocol (LSP) server for Go. The LSP allows any text editor to be extended with IDE-like features (see https://langserver.org/ for details). It is currently in alpha, so it is not stable. 1 gopls \u21a9","title":"gopls"},{"location":"programming/Go/webdev/","text":"Go: Web Development The Simplest Web Server Note The signature of func(w http.ResponseWriter, r *http.Request) is a common way of handling HTTP requests throughout the Go standard library. It perfectly complies with the expected ServeHTTP method signature of Go's Handler interface: 1 type Handler interface { ServeHTTP ( ResponseWriter , * Request ) } package main import ( \"log\" \"net/http\" ) func main () { http . HandleFunc ( \"/\" , func ( w http . ResponseWriter , r * http . Request ) { w . Write ([] byte ( ` <html> <head> <title>Hello World</title> </head> <body> Hello World! </body> </html> ` )) }) if err := http . ListenAndServe ( \":8000\" , nil ); err != nil { log . Fatal ( \"ListenAndServe\" , err ) } } Frequently Asked Questions How do I create a Handler without having to implement an interface? Sometimes, you would need to provide an instance that conforms to the Handler interface, but want to avoid actually implementing the interface. In this case, you might use the http.HandlerFunc (please, note the difference between http.HandleFunc and http.HandlerFunc ): 2 http.HandlerFunc // The HandlerFunc type is an adapter to allow the use of // ordinary functions as HTTP handlers. If f is a function // with the appropriate signature, HandlerFunc(f) is a // Handler that calls f. type HandlerFunc func ( ResponseWriter , * Request ) // ServeHTTP calls f(w, r). func ( f HandlerFunc ) ServeHTTP ( w ResponseWriter , r * Request ) { f ( w , r ) } Looking at it carefully, will help you grasp a crucial part of Go's magic - the fact that everything, including functions, is a type, which you can attach further functions upon. In this case, ServeHTTP is actually implemented for us inside http and essentially proxies to the function we pass as parameter to HandlerFunc . How do I return an HTTP error? http.Error is the default way of communicating errors to your API's consumers. It takes a message and an error code. The three most often used status codes are: http.StatusBadRequest (400) http.StatusNotFound (404) http.StatusInternalServerError (500) http . HandleFunc ( \"/xyz\" , func ( writer http . ResponseWriter , request * http . Request ) { result , err = someFunction () if err != nil { // This could be a custom message as well errMsg := http . StatusText ( http . StatusBadRequest ) http . Error ( writer , errMsg , http . StatusBadRequest ) // NOTE: Do not forget the retunn statement! return } // continue with the logic }) Go\u2019s http package by example \u21a9 type HandlerFunc | Go Docs \u21a9","title":"Web Development"},{"location":"programming/Go/webdev/#go-web-development","text":"","title":"Go: Web Development"},{"location":"programming/Go/webdev/#the-simplest-web-server","text":"Note The signature of func(w http.ResponseWriter, r *http.Request) is a common way of handling HTTP requests throughout the Go standard library. It perfectly complies with the expected ServeHTTP method signature of Go's Handler interface: 1 type Handler interface { ServeHTTP ( ResponseWriter , * Request ) } package main import ( \"log\" \"net/http\" ) func main () { http . HandleFunc ( \"/\" , func ( w http . ResponseWriter , r * http . Request ) { w . Write ([] byte ( ` <html> <head> <title>Hello World</title> </head> <body> Hello World! </body> </html> ` )) }) if err := http . ListenAndServe ( \":8000\" , nil ); err != nil { log . Fatal ( \"ListenAndServe\" , err ) } }","title":"The Simplest Web Server"},{"location":"programming/Go/webdev/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"programming/Go/webdev/#how-do-i-create-a-handler-without-having-to-implement-an-interface","text":"Sometimes, you would need to provide an instance that conforms to the Handler interface, but want to avoid actually implementing the interface. In this case, you might use the http.HandlerFunc (please, note the difference between http.HandleFunc and http.HandlerFunc ): 2 http.HandlerFunc // The HandlerFunc type is an adapter to allow the use of // ordinary functions as HTTP handlers. If f is a function // with the appropriate signature, HandlerFunc(f) is a // Handler that calls f. type HandlerFunc func ( ResponseWriter , * Request ) // ServeHTTP calls f(w, r). func ( f HandlerFunc ) ServeHTTP ( w ResponseWriter , r * Request ) { f ( w , r ) } Looking at it carefully, will help you grasp a crucial part of Go's magic - the fact that everything, including functions, is a type, which you can attach further functions upon. In this case, ServeHTTP is actually implemented for us inside http and essentially proxies to the function we pass as parameter to HandlerFunc .","title":"How do I create a Handler without having to implement an interface?"},{"location":"programming/Go/webdev/#how-do-i-return-an-http-error","text":"http.Error is the default way of communicating errors to your API's consumers. It takes a message and an error code. The three most often used status codes are: http.StatusBadRequest (400) http.StatusNotFound (404) http.StatusInternalServerError (500) http . HandleFunc ( \"/xyz\" , func ( writer http . ResponseWriter , request * http . Request ) { result , err = someFunction () if err != nil { // This could be a custom message as well errMsg := http . StatusText ( http . StatusBadRequest ) http . Error ( writer , errMsg , http . StatusBadRequest ) // NOTE: Do not forget the retunn statement! return } // continue with the logic }) Go\u2019s http package by example \u21a9 type HandlerFunc | Go Docs \u21a9","title":"How do I return an HTTP error?"},{"location":"programming/Go/databases/sqlite_orm/","text":"SQLite ORM Example inspired by GORM Quick Start package main import ( \"github.com/jinzhu/gorm\" _ \"github.com/jinzhu/gorm/dialects/sqlite\" ) type Person struct { gorm . Model Name string `json:\"name\"` } func main () { db , err := gorm . Open ( \"sqlite3\" , \"./db.sqlite\" ) defer db . Close () db . AutoMigrate ( & Person {}) me := Person { Name : \"Preslav\" , } db . NewRecord ( me ) db . Create ( & me ) }","title":"SQLite ORM Example"},{"location":"programming/Go/databases/sqlite_orm/#sqlite-orm-example","text":"inspired by GORM Quick Start package main import ( \"github.com/jinzhu/gorm\" _ \"github.com/jinzhu/gorm/dialects/sqlite\" ) type Person struct { gorm . Model Name string `json:\"name\"` } func main () { db , err := gorm . Open ( \"sqlite3\" , \"./db.sqlite\" ) defer db . Close () db . AutoMigrate ( & Person {}) me := Person { Name : \"Preslav\" , } db . NewRecord ( me ) db . Create ( & me ) }","title":"SQLite ORM Example"},{"location":"programming/JavaScript/","text":"JavaScript Basics String Manipulation Replacing all occurences of a String Whoever has tried String.replace() knows that it would remove the first occurence of the string you want to replace. That is, unless you use a regular expression 1 : \"2019-08-07\" . replace ( \"-\" , \"/\" ); // => 2019/08-07 \"2019-08-07\" . replace ( /-/g , \"/\" ); // => 2019/08/07 The trick is to apply the g flag to the regex, telling it to apply the change across the entire string. If the regex becomes more comple, you might consider compiling it and storing it in a variable 2 . Cloning an object There are several ways to create a copy of an object, and depending on what you want, you can choose between shallow or deep copies 3 4 . NOTE: By default, JavaScript passes everything by reference, so modifying one property as part of the new instance, will result in it being changed in the original object as well. a = { test : 42 }; b = a ; // does not create a copy c = { ... a }; // creates a shallow copy d = Object . assign ({}, a ); // creates a shallow copy e = JSON . parse ( JSON . stringify ( a ); // creates a deep copy How to replace all occurrences of a string in JavaScript | StackOverflow \u21a9 Creating a regular expression | Mozilla Web Docs \u21a9 Understanding Deep and Shallow Copy in Javascript \u21a9 Explanation of Deep and Shallow Copying \u21a9","title":"Introduction"},{"location":"programming/JavaScript/#javascript","text":"","title":"JavaScript"},{"location":"programming/JavaScript/#basics","text":"","title":"Basics"},{"location":"programming/JavaScript/#string-manipulation","text":"","title":"String Manipulation"},{"location":"programming/JavaScript/#replacing-all-occurences-of-a-string","text":"Whoever has tried String.replace() knows that it would remove the first occurence of the string you want to replace. That is, unless you use a regular expression 1 : \"2019-08-07\" . replace ( \"-\" , \"/\" ); // => 2019/08-07 \"2019-08-07\" . replace ( /-/g , \"/\" ); // => 2019/08/07 The trick is to apply the g flag to the regex, telling it to apply the change across the entire string. If the regex becomes more comple, you might consider compiling it and storing it in a variable 2 .","title":"Replacing all occurences of a String"},{"location":"programming/JavaScript/#cloning-an-object","text":"There are several ways to create a copy of an object, and depending on what you want, you can choose between shallow or deep copies 3 4 . NOTE: By default, JavaScript passes everything by reference, so modifying one property as part of the new instance, will result in it being changed in the original object as well. a = { test : 42 }; b = a ; // does not create a copy c = { ... a }; // creates a shallow copy d = Object . assign ({}, a ); // creates a shallow copy e = JSON . parse ( JSON . stringify ( a ); // creates a deep copy How to replace all occurrences of a string in JavaScript | StackOverflow \u21a9 Creating a regular expression | Mozilla Web Docs \u21a9 Understanding Deep and Shallow Copy in Javascript \u21a9 Explanation of Deep and Shallow Copying \u21a9","title":"Cloning an object"},{"location":"programming/JavaScript/vuejs/","text":"Vue.js Creating a new project with the Vue CLI Perhaps, the easiest way is to just install the vue-cli: yarn global add @vue/cli # or npm install -g @vue/cli and then create your project template right away: 1 vue create hello-world Warning You might find a lot of tutorials online using the vue init webpack project_name command instead. As far as the documentation is concerned, this is already a legacy (Vue CLI 2) approach, and I would not recommend using it for new projects. Instead, stick to the much easier Vue CLI >= 3 approach described above 2 . Working with TypeScript When working with TypeScript, make sure that your components also extend from Vue . Othewise, you can get a pretty nasty message by the TS compiler that this.$store or anything else that you might expect to be accessible inside your Vue component, is actually undefined . So insted of this (vanilla JS): < script > export default { // code goes here... }; </ script > use this (TypeScript): < script lang = \"ts\" > import Vue from 'vue' export default Vue . extend ( { // code goes here }) < /script> Creating a Project | Vue.js Docs \u21a9 Pulling 2.x Templates (Legacy) | Vue.js Docs \u21a9","title":"Vue.js"},{"location":"programming/JavaScript/vuejs/#vuejs","text":"","title":"Vue.js"},{"location":"programming/JavaScript/vuejs/#creating-a-new-project-with-the-vue-cli","text":"Perhaps, the easiest way is to just install the vue-cli: yarn global add @vue/cli # or npm install -g @vue/cli and then create your project template right away: 1 vue create hello-world Warning You might find a lot of tutorials online using the vue init webpack project_name command instead. As far as the documentation is concerned, this is already a legacy (Vue CLI 2) approach, and I would not recommend using it for new projects. Instead, stick to the much easier Vue CLI >= 3 approach described above 2 .","title":"Creating a new project with the Vue CLI"},{"location":"programming/JavaScript/vuejs/#working-with-typescript","text":"When working with TypeScript, make sure that your components also extend from Vue . Othewise, you can get a pretty nasty message by the TS compiler that this.$store or anything else that you might expect to be accessible inside your Vue component, is actually undefined . So insted of this (vanilla JS): < script > export default { // code goes here... }; </ script > use this (TypeScript): < script lang = \"ts\" > import Vue from 'vue' export default Vue . extend ( { // code goes here }) < /script> Creating a Project | Vue.js Docs \u21a9 Pulling 2.x Templates (Legacy) | Vue.js Docs \u21a9","title":"Working with TypeScript"},{"location":"programming/Python/","text":"Python Basics Iterators Iterator vs. Iterable This is a commonly asked question. In general, an Iterable object can be anything, as long as it implements the standard __iter()__ method. Python lists, tuples, maps, and of course, iterators, all implement this method. You can think of Iterable as an interface or protocol. The Iterator on the other hand, is a one specific implementation of the Iterable protocol, which tries to be memory-efficient, thus its values can be accessed one at a time. Iterators implement an additional method called __next()__ , which gets called upon every pass, and returns one value at a time. Iterators are all over the placein Python, and pretty much every collection type (e.g. map, list, etc) can be turned into and Iterator, by wrapping the collection with the iter() function. Additionaly, map , filter , and also, functions using yield , all return Iterator instances. Accessing the Index of an Iterable Row If you are looping over an iterator or a list, often you'd like to get the index of the particular row you're on. This is where the enumerate function comes handy: # assuming that items is an iterable object for idx , item in enumerate ( items ): print ( idx , item ) enumerate 1 Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable. Dates and Date Formatting Turn a UNIX timestamp into a date object / date string 2 from datetime import datetime timestamp = 1545730073 dt_object = datetime . fromtimestamp ( timestamp ) str_date = str ( dt_object ) # '2018-12-25 09:27:53' Setup and Installing Dependencies requirements.txt Requirements files can invoke other requirements files In a very simple form of inheritance requirements.txt can get the dependencies of other requiements.txt files, and add additional ones on top. How is this useful? Let's say that you keep your common dependencies in requirements.txt and have additional tooling and dependencies in a separate file, let's call it requirements-dev.txt . When you do your local setup instead of doing the usual drill: pip install -r requirements.txt you will do the following: pip install -r requirements-dev.txt All you need to do, in order for you to get all the original dependencies listed in requirements.txt , is to add one line to requirements-dev.txt : -r requirements.txt # Add your other developer and tooling dependencies underneath enumerate | Python Docs \u21a9 Python timestamp to datetime and vice-versa \u21a9","title":"Basics"},{"location":"programming/Python/#python-basics","text":"","title":"Python Basics"},{"location":"programming/Python/#iterators","text":"","title":"Iterators"},{"location":"programming/Python/#iterator-vs-iterable","text":"This is a commonly asked question. In general, an Iterable object can be anything, as long as it implements the standard __iter()__ method. Python lists, tuples, maps, and of course, iterators, all implement this method. You can think of Iterable as an interface or protocol. The Iterator on the other hand, is a one specific implementation of the Iterable protocol, which tries to be memory-efficient, thus its values can be accessed one at a time. Iterators implement an additional method called __next()__ , which gets called upon every pass, and returns one value at a time. Iterators are all over the placein Python, and pretty much every collection type (e.g. map, list, etc) can be turned into and Iterator, by wrapping the collection with the iter() function. Additionaly, map , filter , and also, functions using yield , all return Iterator instances.","title":"Iterator vs. Iterable"},{"location":"programming/Python/#accessing-the-index-of-an-iterable-row","text":"If you are looping over an iterator or a list, often you'd like to get the index of the particular row you're on. This is where the enumerate function comes handy: # assuming that items is an iterable object for idx , item in enumerate ( items ): print ( idx , item ) enumerate 1 Return an enumerate object. iterable must be a sequence, an iterator, or some other object which supports iteration. The __next__() method of the iterator returned by enumerate() returns a tuple containing a count (from start which defaults to 0) and the values obtained from iterating over iterable.","title":"Accessing the Index of an Iterable Row"},{"location":"programming/Python/#dates-and-date-formatting","text":"","title":"Dates and Date Formatting"},{"location":"programming/Python/#turn-a-unix-timestamp-into-a-date-object-date-string-2","text":"from datetime import datetime timestamp = 1545730073 dt_object = datetime . fromtimestamp ( timestamp ) str_date = str ( dt_object ) # '2018-12-25 09:27:53'","title":"Turn a UNIX timestamp into a date object / date string 2"},{"location":"programming/Python/#setup-and-installing-dependencies","text":"","title":"Setup and Installing Dependencies"},{"location":"programming/Python/#requirementstxt","text":"","title":"requirements.txt"},{"location":"programming/Python/#requirements-files-can-invoke-other-requirements-files","text":"In a very simple form of inheritance requirements.txt can get the dependencies of other requiements.txt files, and add additional ones on top. How is this useful? Let's say that you keep your common dependencies in requirements.txt and have additional tooling and dependencies in a separate file, let's call it requirements-dev.txt . When you do your local setup instead of doing the usual drill: pip install -r requirements.txt you will do the following: pip install -r requirements-dev.txt All you need to do, in order for you to get all the original dependencies listed in requirements.txt , is to add one line to requirements-dev.txt : -r requirements.txt # Add your other developer and tooling dependencies underneath enumerate | Python Docs \u21a9 Python timestamp to datetime and vice-versa \u21a9","title":"Requirements files can invoke other requirements files"},{"location":"programming/Python/async/","text":"Asynchronous Processing Despite the fair biit of controversy, Python does support various means of achieving concurrency: processes , threads , and, as of recently async IO support, based on an event-loop. What to use where if io_bound : if io_very_slow : print ( \"Use Asyncio\" ) else : print ( \"Use Threads\" ) else : print ( \"Multi Processing\" ) via Async Python: The Different Forms of Concurrency","title":"Asynchronous Processing"},{"location":"programming/Python/async/#asynchronous-processing","text":"Despite the fair biit of controversy, Python does support various means of achieving concurrency: processes , threads , and, as of recently async IO support, based on an event-loop.","title":"Asynchronous Processing"},{"location":"programming/Python/async/#what-to-use-where","text":"if io_bound : if io_very_slow : print ( \"Use Asyncio\" ) else : print ( \"Use Threads\" ) else : print ( \"Multi Processing\" ) via Async Python: The Different Forms of Concurrency","title":"What to use where"},{"location":"programming/Python/decorators/","text":"Decorators Decorator Use Cases Wrap a function There are situations, where it is helpful to apply the same logic to a function, without having to affect the logic of the function itself. The simplest example is measuring the execution time of a given function. The following code describes a simple measure decorator, which when applied to a function, would measure and log the time it took to execute this function: import logging import time from functools import partial , wraps LOGGER = logging . getLogger ( \"my_logger\" ) def measure ( f = None , label = \"\" ): if f is None : return partial ( measure , label = label ) @wraps ( f ) def wrap ( * args , ** kwargs ): start = time . time () result = f ( * args , ** kwargs ) LOGGER . debug ( f \"{label} {f.__qualname__} -- execution time: {time.time() - start} s\" ) return result return wrap The application of this decorator is extremely simple too: @measure def my_func (): # do something @measure ( label = \"fancy label\" ) def my_func (): # do something Notice the use of functool.wraps and functool.partial in order to get this running. The use of functools.partial in this context is a topic for a whole post of its own, but here it should suffice to say that it \u201cfreezes\u201d some portion of a function\u2019s arguments and/or keywords resulting in a new object with a simplified signature . 1 2 How to Write a Decorator with an Optional Argument? \u21a9 functools.partial | Python Docs \u21a9","title":"Decorators"},{"location":"programming/Python/decorators/#decorators","text":"","title":"Decorators"},{"location":"programming/Python/decorators/#decorator-use-cases","text":"","title":"Decorator Use Cases"},{"location":"programming/Python/decorators/#wrap-a-function","text":"There are situations, where it is helpful to apply the same logic to a function, without having to affect the logic of the function itself. The simplest example is measuring the execution time of a given function. The following code describes a simple measure decorator, which when applied to a function, would measure and log the time it took to execute this function: import logging import time from functools import partial , wraps LOGGER = logging . getLogger ( \"my_logger\" ) def measure ( f = None , label = \"\" ): if f is None : return partial ( measure , label = label ) @wraps ( f ) def wrap ( * args , ** kwargs ): start = time . time () result = f ( * args , ** kwargs ) LOGGER . debug ( f \"{label} {f.__qualname__} -- execution time: {time.time() - start} s\" ) return result return wrap The application of this decorator is extremely simple too: @measure def my_func (): # do something @measure ( label = \"fancy label\" ) def my_func (): # do something Notice the use of functool.wraps and functool.partial in order to get this running. The use of functools.partial in this context is a topic for a whole post of its own, but here it should suffice to say that it \u201cfreezes\u201d some portion of a function\u2019s arguments and/or keywords resulting in a new object with a simplified signature . 1 2 How to Write a Decorator with an Optional Argument? \u21a9 functools.partial | Python Docs \u21a9","title":"Wrap a function"},{"location":"programming/Python/webdev/","text":"Web Development Web Servers / WSGI Gunicorn FAQs How do I include access logs? By default, Gunicorn won't output anything but the log statements from within the application (and of those, only the ones matching the particular log level). In a regular setup, your access logs will be sitting in an access_log file, maintained by Apache or nginx. If you want to output those in the standard log output of Gunicorn too (stdout by default), you should explicitly configure Gunicorn to do so: 1 gunicorn \\ --bind 0 .0.0.0:8080 \\ --workers 4 \\ --access-logformat '%(t)s %(p)s %(h)s %(m)s %(U)s %(s)s - %(L)ss' \\ --access-logfile - \\ my_app.wsgi:app NOTE: Make sure that you are also usign the right output. In my example, --access-logfile - means, use stdout Access log format | Gunicorn Docs \u21a9","title":"Web Development"},{"location":"programming/Python/webdev/#web-development","text":"","title":"Web Development"},{"location":"programming/Python/webdev/#web-servers-wsgi","text":"","title":"Web Servers / WSGI"},{"location":"programming/Python/webdev/#gunicorn","text":"","title":"Gunicorn"},{"location":"programming/Python/webdev/#faqs","text":"","title":"FAQs"},{"location":"programming/Python/webdev/#how-do-i-include-access-logs","text":"By default, Gunicorn won't output anything but the log statements from within the application (and of those, only the ones matching the particular log level). In a regular setup, your access logs will be sitting in an access_log file, maintained by Apache or nginx. If you want to output those in the standard log output of Gunicorn too (stdout by default), you should explicitly configure Gunicorn to do so: 1 gunicorn \\ --bind 0 .0.0.0:8080 \\ --workers 4 \\ --access-logformat '%(t)s %(p)s %(h)s %(m)s %(U)s %(s)s - %(L)ss' \\ --access-logfile - \\ my_app.wsgi:app NOTE: Make sure that you are also usign the right output. In my example, --access-logfile - means, use stdout Access log format | Gunicorn Docs \u21a9","title":"How do I include access logs?"},{"location":"programming/Python/datascience/numpy/","text":"NumPy Fitting a logarithmic curve There are times when you'd like to fit a logarithmic curve instead of a linear line. A good example is the relationship between house pricing and area. Though prices can go up indefinitely, housing area rarely deviates disproportionately from the mean. 1 import numpy as np prices = np . array ([ 1 , 7 , 20 , 50 , 79 ]) area = np . array ([ 10 , 19 , 30 , 35 , 51 ]) np . polyfit ( np . log ( prices ), area , 1 ) # array([ 8.46295607, 6.61867463]) # ares \u2248 8.46 math.log(price) + 6.62 Alternatively, if you want to fit an exponential curve (e.g. the inverse relationship between are and price, simply reverse the order of the x and y arguments: import numpy as np prices = np . array ([ 1 , 7 , 20 , 50 , 79 ]) area = np . array ([ 10 , 19 , 30 , 35 , 51 ]) np . polyfit ( area , np . log ( prices ), 1 ) # array([ 0.01410343, 12.21866174]) # price \u2248 0.01410343 math.exp(area) + 12.21866174 How to do exponential and logarithmic curve fitting in Python? | StackOverflow \u21a9","title":"NumPy"},{"location":"programming/Python/datascience/numpy/#numpy","text":"","title":"NumPy"},{"location":"programming/Python/datascience/numpy/#fitting-a-logarithmic-curve","text":"There are times when you'd like to fit a logarithmic curve instead of a linear line. A good example is the relationship between house pricing and area. Though prices can go up indefinitely, housing area rarely deviates disproportionately from the mean. 1 import numpy as np prices = np . array ([ 1 , 7 , 20 , 50 , 79 ]) area = np . array ([ 10 , 19 , 30 , 35 , 51 ]) np . polyfit ( np . log ( prices ), area , 1 ) # array([ 8.46295607, 6.61867463]) # ares \u2248 8.46 math.log(price) + 6.62 Alternatively, if you want to fit an exponential curve (e.g. the inverse relationship between are and price, simply reverse the order of the x and y arguments: import numpy as np prices = np . array ([ 1 , 7 , 20 , 50 , 79 ]) area = np . array ([ 10 , 19 , 30 , 35 , 51 ]) np . polyfit ( area , np . log ( prices ), 1 ) # array([ 0.01410343, 12.21866174]) # price \u2248 0.01410343 math.exp(area) + 12.21866174 How to do exponential and logarithmic curve fitting in Python? | StackOverflow \u21a9","title":"Fitting a logarithmic curve"},{"location":"programming/Python/datascience/pandas/","text":"Pandas Simple Descriptive Statistics Before taking the big guns, such as aggregations, I usually try to first get a good grasp of the data inside the data frame. Looking at the head and tail of the data framew is one of the first things you should do: # check the top of the data frame df . head () # check the botto of the data frame df . tail () If the data frame is very large you can also grab a random sample of it: # Fetch an exact number of random lines (make sure that freq=None) df . sample ( n = 5 ) # Fetch a percentage of random lines (make sure that n=None) df . sample ( freq = 0.1 ) Last but not least, you can try describe and value_counts . describe will return a new data frame consisting of various basic stats for each of the numeric columns in the data frame (count, mean, std, min, max, 25%, 50% 75%): df . describe () # price area # count 150.0 150.000000 # mean 943139.5 100.085800 # std 844677.0 44.566817 # min 62000.0 26.220000 # 25% 419875.0 70.740000 # 50% 585500.0 93.710000 # 75% 1132500.0 126.697500 # max 4500000.0 279.500000 TODO: Document value_counts value_counts gets applied applied to a discrete series instead, and is a really easy way of checking how many rows there of each value there are in a data frame: df [ \"city\" ] . value_counts () # M\u00fcnchen 96 # Hamburg 24 # Berlin 16 # Bremen 14 Encode categorical data Simple Encoding There are many times, when you would need to turn your series of categorical data (e.g. city names, professions, car models, etc) into numeric representations. The simplest way to do this using Pandas, is to call factorize on the series you want to get encoded. 1 2 factorize Encode the object as an enumerated type or categorical variable. This method is useful for obtaining a numeric representation of an array when all that matters is identifying distinct values. factorize is available as both a top-level function pandas.factorize(), and as a method df [ 'c_code' ] = pd . factorize ( df [ 'city' ])[ 0 ] print ( df ) # city c_code # M\u00fcnchen 0 # Bremen 1 # Berlin 2 # Hamburg 3 Pandas: convert categories to numbers | Stackoverflow \u21a9 factorize | Pandas Docs \u21a9","title":"Pandas"},{"location":"programming/Python/datascience/pandas/#pandas","text":"","title":"Pandas"},{"location":"programming/Python/datascience/pandas/#simple-descriptive-statistics","text":"Before taking the big guns, such as aggregations, I usually try to first get a good grasp of the data inside the data frame. Looking at the head and tail of the data framew is one of the first things you should do: # check the top of the data frame df . head () # check the botto of the data frame df . tail () If the data frame is very large you can also grab a random sample of it: # Fetch an exact number of random lines (make sure that freq=None) df . sample ( n = 5 ) # Fetch a percentage of random lines (make sure that n=None) df . sample ( freq = 0.1 ) Last but not least, you can try describe and value_counts . describe will return a new data frame consisting of various basic stats for each of the numeric columns in the data frame (count, mean, std, min, max, 25%, 50% 75%): df . describe () # price area # count 150.0 150.000000 # mean 943139.5 100.085800 # std 844677.0 44.566817 # min 62000.0 26.220000 # 25% 419875.0 70.740000 # 50% 585500.0 93.710000 # 75% 1132500.0 126.697500 # max 4500000.0 279.500000 TODO: Document value_counts value_counts gets applied applied to a discrete series instead, and is a really easy way of checking how many rows there of each value there are in a data frame: df [ \"city\" ] . value_counts () # M\u00fcnchen 96 # Hamburg 24 # Berlin 16 # Bremen 14","title":"Simple Descriptive Statistics"},{"location":"programming/Python/datascience/pandas/#encode-categorical-data","text":"","title":"Encode categorical data"},{"location":"programming/Python/datascience/pandas/#simple-encoding","text":"There are many times, when you would need to turn your series of categorical data (e.g. city names, professions, car models, etc) into numeric representations. The simplest way to do this using Pandas, is to call factorize on the series you want to get encoded. 1 2 factorize Encode the object as an enumerated type or categorical variable. This method is useful for obtaining a numeric representation of an array when all that matters is identifying distinct values. factorize is available as both a top-level function pandas.factorize(), and as a method df [ 'c_code' ] = pd . factorize ( df [ 'city' ])[ 0 ] print ( df ) # city c_code # M\u00fcnchen 0 # Bremen 1 # Berlin 2 # Hamburg 3 Pandas: convert categories to numbers | Stackoverflow \u21a9 factorize | Pandas Docs \u21a9","title":"Simple Encoding"},{"location":"programming/crystal/examples/fetch-ebay-product-ids/","text":"The goal of this sample is to demonstrate fetching HTML data from a page (en eBay search listing), parsing the HTML content using a 3rd party library 1 , and looking for a specific attribute within the content ( listingId ). The elements that have it contain IDs to the products that apear on the given listing page. We would finally map those out, and turn the resulting array into a set ( to_s ) in order to remove duplicates. require \"http/client\" require \"myhtml\" module Bayhunt res = HTTP :: Client . get \"https://www.ebay.com/sch/i.html?_nkw=iphone+xr\" parser = Myhtml :: Parser . new ( res . body ) listing_ids = parser . css ( \"[listingId]\" ) . to_a . map do | it | it . attributes [ \"listingid\" ]. to_i64 end . to_s # or, use the shorter-form version (`&`) if there is only one argument passed to the block listing_ids = parser . css ( \"[listingId]\" ) . to_a . map ( &. attributes [ \"listingid\" ]. to_i64 ) . to_s p listing_ids end myhtml - Fast HTML5 Parser, Css selectors | GtiHub \u21a9 class HTTP::Client | Crystal API Reference \u21a9 Blocks and Procs | Crystal Docs \u21a9","title":"Fetch Items from an eBay Listing Page"},{"location":"programming/flutter/","text":"Flutter Core Concepts Widgets In Flutter, everything you see on the screen and can interact with, is called a Widget 1 2 . Whether they keep any state or not, widgets are to be considered immutable - when the state a widget depends on depends on changes, the widget does not merely change, but it gets replaced with a new instance. This is a concept that has been popularized by frameworks such as React. Stateful vs. Stateless Widgets Flutter distinguishes between stateless and stateful widgets. For those, familiar with React, the distinction is similar to that between class and functional React components 3 . Stateless widgets A stateless widget is the rough equivalent of a one-way street. It is given some final state at instantiation time, and throughoutits lifetime, it only makes use of those. A stateless widget cannot hold non-fina fields, in fact if you try to add one to a class that extends from StatelessWidget , you will see the following warning: This class (or a class which this class inherits from) is marked as '@immutable', but one or more of its instance fields are not final. If you dive deeper into the Flutter SDK code, you will find the following piece of documentation regarding @immutable : A class is immutable if all of the instance fields of the class, whether defined directly or inherited, are final . TODO: Add more detials from Widget - State - Context - InheritedWidget Layout Scaffold Common Issues Widgets appear behind navigation elements (e.g. behind nav bars) A common issue when setting up a page Scaffold is to see content appearing behind the main navigation element (e.g. behind the nav bar). To avoid this, the immediate child widget of a Scaffold instance needs to be wrapped in a so called SafeArea 6 widget: class SearchPage1 extends StatelessWidget { @ override Widget build ( BuildContext context ) { return new CupertinoPageScaffold ( navigationBar: CupertinoNavigationBar ( middle: Text ( 'Saved Searches' ), ), child: SafeArea ( child: Column ( // the rest of the widget continues Row and Column TODO: add more detials from Flutter\u200a\u2014\u200aRow/Column Cheat Sheet Advanced Topics Slivers Slivers 4 are not a very deeply discussed topic in Flutter, mainly because they sit underneath more commonly used Widgets such as ListView, and GridView. This is a problem, because it leads to lots of panic when it comes to working with slivers. A sliver is just a portion of a scrollable area. Under the covers, all of the scrollable views you use, like ListView and GridView, are actually implemented using Slivers. 5 State Management TODO: elaborate on this List of state management approaches When it comes to state management, a good advice for people just starting out with Flutter is: use ScopedModel for as long as you can. In a large majority of cases, a scoped model would be more than sufficient. When it does not scale, you can have a look at BLoC or at Redux for those coming from React. 7 If you are new to Flutter and don't have a strong reason to choose any other approach, this is the first thing you should try, before moving on to some more compliated approaches. 8 I've got to say, I'm pretty frustrated to see how many excruciatingly complex solutions there are out there just to implement reactive @flutterio . I've been Googling \"BLoC\" for 30mins now and even *I'm* overwhelmed. Complexity != robust architecture. \ud83d\ude02 Strive for simplicity ppl. \u2014 Nick Manning (@seenickcode) January 27, 2019 Basic widgets | Flutter \u21a9 Flutter Widgets | Flutter by Example \u21a9 Reactjs: Class Components and Functional Components \u21a9 Slivers | Flutter Docs \u21a9 Slivers Demystifed \u21a9 SafeArea | Flutter Docs \u21a9 Emily Fortuna | It's All Widgets Podcast \u21a9 Simple app state management | Flutter Docs \u21a9","title":"Flutter"},{"location":"programming/flutter/#flutter","text":"","title":"Flutter"},{"location":"programming/flutter/#core-concepts","text":"","title":"Core Concepts"},{"location":"programming/flutter/#widgets","text":"In Flutter, everything you see on the screen and can interact with, is called a Widget 1 2 . Whether they keep any state or not, widgets are to be considered immutable - when the state a widget depends on depends on changes, the widget does not merely change, but it gets replaced with a new instance. This is a concept that has been popularized by frameworks such as React.","title":"Widgets"},{"location":"programming/flutter/#stateful-vs-stateless-widgets","text":"Flutter distinguishes between stateless and stateful widgets. For those, familiar with React, the distinction is similar to that between class and functional React components 3 .","title":"Stateful vs. Stateless Widgets"},{"location":"programming/flutter/#stateless-widgets","text":"A stateless widget is the rough equivalent of a one-way street. It is given some final state at instantiation time, and throughoutits lifetime, it only makes use of those. A stateless widget cannot hold non-fina fields, in fact if you try to add one to a class that extends from StatelessWidget , you will see the following warning: This class (or a class which this class inherits from) is marked as '@immutable', but one or more of its instance fields are not final. If you dive deeper into the Flutter SDK code, you will find the following piece of documentation regarding @immutable : A class is immutable if all of the instance fields of the class, whether defined directly or inherited, are final . TODO: Add more detials from Widget - State - Context - InheritedWidget","title":"Stateless widgets"},{"location":"programming/flutter/#layout","text":"","title":"Layout"},{"location":"programming/flutter/#scaffold","text":"","title":"Scaffold"},{"location":"programming/flutter/#common-issues","text":"","title":"Common Issues"},{"location":"programming/flutter/#widgets-appear-behind-navigation-elements-eg-behind-nav-bars","text":"A common issue when setting up a page Scaffold is to see content appearing behind the main navigation element (e.g. behind the nav bar). To avoid this, the immediate child widget of a Scaffold instance needs to be wrapped in a so called SafeArea 6 widget: class SearchPage1 extends StatelessWidget { @ override Widget build ( BuildContext context ) { return new CupertinoPageScaffold ( navigationBar: CupertinoNavigationBar ( middle: Text ( 'Saved Searches' ), ), child: SafeArea ( child: Column ( // the rest of the widget continues","title":"Widgets appear behind navigation elements (e.g. behind nav bars)"},{"location":"programming/flutter/#row-and-column","text":"TODO: add more detials from Flutter\u200a\u2014\u200aRow/Column Cheat Sheet","title":"Row and Column"},{"location":"programming/flutter/#advanced-topics","text":"","title":"Advanced Topics"},{"location":"programming/flutter/#slivers","text":"Slivers 4 are not a very deeply discussed topic in Flutter, mainly because they sit underneath more commonly used Widgets such as ListView, and GridView. This is a problem, because it leads to lots of panic when it comes to working with slivers. A sliver is just a portion of a scrollable area. Under the covers, all of the scrollable views you use, like ListView and GridView, are actually implemented using Slivers. 5","title":"Slivers"},{"location":"programming/flutter/#state-management","text":"TODO: elaborate on this List of state management approaches When it comes to state management, a good advice for people just starting out with Flutter is: use ScopedModel for as long as you can. In a large majority of cases, a scoped model would be more than sufficient. When it does not scale, you can have a look at BLoC or at Redux for those coming from React. 7 If you are new to Flutter and don't have a strong reason to choose any other approach, this is the first thing you should try, before moving on to some more compliated approaches. 8 I've got to say, I'm pretty frustrated to see how many excruciatingly complex solutions there are out there just to implement reactive @flutterio . I've been Googling \"BLoC\" for 30mins now and even *I'm* overwhelmed. Complexity != robust architecture. \ud83d\ude02 Strive for simplicity ppl. \u2014 Nick Manning (@seenickcode) January 27, 2019 Basic widgets | Flutter \u21a9 Flutter Widgets | Flutter by Example \u21a9 Reactjs: Class Components and Functional Components \u21a9 Slivers | Flutter Docs \u21a9 Slivers Demystifed \u21a9 SafeArea | Flutter Docs \u21a9 Emily Fortuna | It's All Widgets Podcast \u21a9 Simple app state management | Flutter Docs \u21a9","title":"State Management"},{"location":"programming/hugo/","text":"Hugo Basics Templating Built-in Functions in 1 When you need to find out whether a particular value is inside a given string or a slice: Syntax in SET ITEM A particular example comes from my current effort to rebuild my blog in Hugo. Certain posts of mine contain the tag micropost and should be rendered differently from the rest. To find those out, I had to do the following: {{ if in . Params . tags \" micropost \" }} This is a micropost {{ end }} Alternatively, to find the inverse of this, i.e. the posts that are not microposts, I had to use the ne 2 function in a combination with in . it is a bit more cumbersome, but it works: {{ if ne true ( in . Params . tags \" micropost \" ) }} This is NOT a micropost {{ end }} in | Hugo Docs \u21a9 ne | Hugo Docs \u21a9","title":"Hugo"},{"location":"programming/hugo/#hugo-basics","text":"","title":"Hugo Basics"},{"location":"programming/hugo/#templating","text":"","title":"Templating"},{"location":"programming/hugo/#built-in-functions","text":"","title":"Built-in Functions"},{"location":"programming/hugo/#in1","text":"When you need to find out whether a particular value is inside a given string or a slice: Syntax in SET ITEM A particular example comes from my current effort to rebuild my blog in Hugo. Certain posts of mine contain the tag micropost and should be rendered differently from the rest. To find those out, I had to do the following: {{ if in . Params . tags \" micropost \" }} This is a micropost {{ end }} Alternatively, to find the inverse of this, i.e. the posts that are not microposts, I had to use the ne 2 function in a combination with in . it is a bit more cumbersome, but it works: {{ if ne true ( in . Params . tags \" micropost \" ) }} This is NOT a micropost {{ end }} in | Hugo Docs \u21a9 ne | Hugo Docs \u21a9","title":"in1"},{"location":"programming/tools/IDEs/vim/","text":"VIM as an IDE Despite being lightweight enough to fit in everywhere, vim offers advanced capabilities that go well beyond simple editing. With the right customisations, one can turn vim from an advanced text editor, into a full-blown IDE, while keeping its minimalist nature. 3 Plugin Managers The secret in turning vim into a full-blown IDE lies in its extension capabilities. Up until version 8 1 , vim did not have a native option to install plugins. Initially, this led the community to come up tools that could help make this a breeze. The simplest and perhaps, most well-known community package manager is called pathogen 2 , and is widely used even nowadays. In fact, vim's native package manager has been inspired by and follows the structure laid out by pathogen, so regardless of whether you use pathogen or not, you'd certainly come across it many times. Vim: So long Pathogen, hello native package loading | George Ornbo \u21a9 Pathogen | Github \u21a9 Boost your VIM | Preslav Mihaylov \u21a9","title":"vim"},{"location":"programming/tools/IDEs/vim/#vim-as-an-ide","text":"Despite being lightweight enough to fit in everywhere, vim offers advanced capabilities that go well beyond simple editing. With the right customisations, one can turn vim from an advanced text editor, into a full-blown IDE, while keeping its minimalist nature. 3","title":"VIM as an IDE"},{"location":"programming/tools/IDEs/vim/#plugin-managers","text":"The secret in turning vim into a full-blown IDE lies in its extension capabilities. Up until version 8 1 , vim did not have a native option to install plugins. Initially, this led the community to come up tools that could help make this a breeze. The simplest and perhaps, most well-known community package manager is called pathogen 2 , and is widely used even nowadays. In fact, vim's native package manager has been inspired by and follows the structure laid out by pathogen, so regardless of whether you use pathogen or not, you'd certainly come across it many times. Vim: So long Pathogen, hello native package loading | George Ornbo \u21a9 Pathogen | Github \u21a9 Boost your VIM | Preslav Mihaylov \u21a9","title":"Plugin Managers"},{"location":"programming/tools/IDEs/vs_code/","text":"Visual Studio Code Migrating from IntelliJ/PyCharm Open Preferences -> Extensions or Preferences-Keymaps @recommended : keymaps Search for IntelliJ: You will find kasecato/vscode-intellij-idea-keybindings Setting up as a Python IDE Settings File Every VS Code project has a .vscode directory, which contains a JSON file, called settings.json . Whether, you configure your VS Code extensions form their respective UI, or add lines directly to this file, the effect will be the same. This is how a sample settings.json file looks like for a particular Python project of mine: { \"python.linting.enabled\" : true , \"python.linting.pylintEnabled\" : false , \"python.linting.flake8Enabled\" : true , \"python.linting.flake8Args\" : [ \"--max-line-length=88\" ], \"python.pythonPath\" : \"path_to_my_project/venv/bin/python\" , \"python.formatting.provider\" : \"black\" , \"python.unitTest.unittestEnabled\" : true , \"python.unitTest.pyTestEnabled\" : false , \"python.unitTest.nosetestsEnabled\" : false }","title":"Visual Studio Code"},{"location":"programming/tools/IDEs/vs_code/#visual-studio-code","text":"","title":"Visual Studio Code"},{"location":"programming/tools/IDEs/vs_code/#migrating-from-intellijpycharm","text":"Open Preferences -> Extensions or Preferences-Keymaps @recommended : keymaps Search for IntelliJ: You will find kasecato/vscode-intellij-idea-keybindings","title":"Migrating from IntelliJ/PyCharm"},{"location":"programming/tools/IDEs/vs_code/#setting-up-as-a-python-ide","text":"","title":"Setting up as a Python IDE"},{"location":"programming/tools/IDEs/vs_code/#settings-file","text":"Every VS Code project has a .vscode directory, which contains a JSON file, called settings.json . Whether, you configure your VS Code extensions form their respective UI, or add lines directly to this file, the effect will be the same. This is how a sample settings.json file looks like for a particular Python project of mine: { \"python.linting.enabled\" : true , \"python.linting.pylintEnabled\" : false , \"python.linting.flake8Enabled\" : true , \"python.linting.flake8Args\" : [ \"--max-line-length=88\" ], \"python.pythonPath\" : \"path_to_my_project/venv/bin/python\" , \"python.formatting.provider\" : \"black\" , \"python.unitTest.unittestEnabled\" : true , \"python.unitTest.pyTestEnabled\" : false , \"python.unitTest.nosetestsEnabled\" : false }","title":"Settings File"},{"location":"programming/tools/Version Control/Git/","text":"Git Useful Tricks Get the commit hash of the first commit git rev-list HEAD | tail -n 1 Get the commit hash of the latest commit git rev-list HEAD | head -n 1 Check, which branches contain a given commit hash This is very useful, if you obtain the hash (e.g. from a status log), but you are not sure which branch(es) this commit belongs to. git branch --contains COMMIT_HASH List all local branches, which have already been merged to master This is useful for cleaning up your local branches git branch --merged | grep -v master Clients macOS GitUp Fork","title":"Git"},{"location":"programming/tools/Version Control/Git/#git","text":"","title":"Git"},{"location":"programming/tools/Version Control/Git/#useful-tricks","text":"","title":"Useful Tricks"},{"location":"programming/tools/Version Control/Git/#get-the-commit-hash-of-the-first-commit","text":"git rev-list HEAD | tail -n 1","title":"Get the commit hash of the first commit"},{"location":"programming/tools/Version Control/Git/#get-the-commit-hash-of-the-latest-commit","text":"git rev-list HEAD | head -n 1","title":"Get the commit hash of the latest commit"},{"location":"programming/tools/Version Control/Git/#check-which-branches-contain-a-given-commit-hash","text":"This is very useful, if you obtain the hash (e.g. from a status log), but you are not sure which branch(es) this commit belongs to. git branch --contains COMMIT_HASH","title":"Check, which branches contain a given commit hash"},{"location":"programming/tools/Version Control/Git/#list-all-local-branches-which-have-already-been-merged-to-master","text":"This is useful for cleaning up your local branches git branch --merged | grep -v master","title":"List all local branches, which have already been merged to master"},{"location":"programming/tools/Version Control/Git/#clients","text":"","title":"Clients"},{"location":"programming/tools/Version Control/Git/#macos","text":"GitUp Fork","title":"macOS"}]}